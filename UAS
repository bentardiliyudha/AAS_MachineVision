import numpy as np
from sklearn import datasets, model_selection, svm, metrics
from skimage.feature import hog
from mlxtend.data import loadlocal_mnist

# Memuat dataset MNIST
test_images, test_labels = loadlocal_mnist(images_path='./images/t10k-images.idx3-ubyte',
                                           labels_path='./images/t10k-labels.idx1-ubyte')

train_images, train_labels = loadlocal_mnist(images_path='./images/train-images.idx3-ubyte',
                                             labels_path='./images/train-labels.idx1-ubyte')

# Ekstraksi fitur HOG
def extract_hog_features(images):
    hog_features = []
    for img in images:
        fd = hog(img.reshape(28, 28), orientations=9, pixels_per_cell=(8, 8), cells_per_block=(2,2), block_norm='L2')
        hog_features.append(fd)
    return np.array(hog_features)

# Ekstraksi fitur HOG untuk diolah 
X_train_hog = extract_hog_features(train_images)
X_test_hog = extract_hog_features(test_images)

# Membuat menjadi SVM
clv = svm.SVC()
clv.fit(X_train_hog, train_labels)

# Melakukan prediksi
y_pred = clv.predict(X_test_hog)

# Evaluasi performa
conf_matrix = metrics.confusion_matrix(test_labels, y_pred)
accuracy = metrics.accuracy_score(test_labels, y_pred)
precision = metrics.precision_score(test_labels, y_pred, average='weighted')

# Menampilkan hasil evaluasi
print("Confusion Matrix:\n", conf_matrix)
print("\nAccuracy:", accuracy)
print("\nPrecision:", precision)
